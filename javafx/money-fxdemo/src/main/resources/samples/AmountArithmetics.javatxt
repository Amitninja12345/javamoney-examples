package samples;

import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;

import javax.money.CurrencyUnit;
import javax.money.MonetaryAmount;

import net.java.javamoney.ri.core.IntegralMoney;
import net.java.javamoney.ri.core.Money;
import net.java.javamoney.ri.core.MoneyCurrency;

/**
 * Sample snippets for arithemtic operations with amounts.
 */
public class AmountArithemtics {
	/**
	 * Some simple cases.
	 */
	public void simplerCases() {
		MonetaryAmount m1 = Money.of("USD", 789);
		MonetaryAmount m2 = Money.of("USD", 1234566.15);
		
		MonetaryAmount sum = m1.add(m2);
		MonetaryAmount diff = m1.substract(m2);
	}

   /**
	 * Mixed representations.
	 */
	public void mixedImplementations() {
		MonetaryAmount m1 = IntegralMoney.of("USD", 789);
		MonetaryAmount m2 = Money.of("USD", 1234566.15);
		
		MonetaryAmount sum = m1.add(m2);
		MonetaryAmount diff = m2.substract(m1).negate();
	}
}
